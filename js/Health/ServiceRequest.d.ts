import Guid = require('../Types/Guid');
import Connection = require('./Connection');
import RecordAccessor = require('./RecordAccessor');
import ResponseData = require('./ResponseData');
declare class ServiceRequest {
    private static _CorrelationId;
    private static _LastResponseId;
    private _RecordId;
    RecordId: Guid;
    private _CultureCode;
    CultureCode: string;
    private static _Version;
    Version: string;
    private static _ConstructVersionString();
    private _parameters;
    Parameters: string;
    private _TimeoutSeconds;
    TimeoutSeconds: number;
    private _ResponseData;
    Response: ResponseData;
    private _ResponseId;
    ResponseId: Guid;
    private _MsgTimeToLive;
    TimeToLiveSeconds: number;
    private _XmlRequest;
    XmlRequest: Buffer;
    private _XmlRequestLength;
    XmlRequestLength: number;
    ImpersonatedPersonId: Guid;
    private _TargetPersonId;
    private _Connection;
    MethodName: string;
    private _MethodName;
    MethodVersion: number;
    private _MethodVersion;
    constructor(connection: Connection, methodName: string, methodVersion: number, recordAccessor?: RecordAccessor);
    CorrelationId: Guid;
    private static _SetLastResponseId(value);
    static LastResponseId: Guid;
    Execute(callBackAfterRequestExcection?: () => void): void;
    private ResumeRequestExcecution(callBackAfterRequestExcection?);
    private _Execute(callBackAfterRequestExcection?);
}
export = ServiceRequest;
